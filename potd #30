441. Arranging Coins  //Leetcode

class Solution {
    public int arrangeCoins(int n) {
        
        long start=0;
        long end=n;
        while(start<=end)
        {
            long mid=end+(start-end)/2;
            if(n==(long)(mid*(mid+1))/2)
            return (int)mid;
             if(n<(long)(mid*(mid+1))/2)
            end=mid-1;
            else
            start=mid+1;
        }
        return (int)end;
    }
}

33. Search in Rotated Sorted Array  //Leetcode

class Solution {
    public int search(int[] nums, int target) {
    int start=0;
    int end=nums.length-1;
    while(start<=end)
    {
        int mid=(start+end)/2;
        if(nums[mid]==target)
        return mid;
        else if(nums[start]<=nums[mid])
        {if(nums[start]<=target&&target<=nums[mid])
           end=mid-1;
           else
           start=mid+1;
    
        }
        else
        {
            if(nums[mid]<=target&&target<=nums[end])
            {
                start=mid+1;
            }
            else
            end=mid-1;
        }
    }
    return -1;
        
    }
}
